{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak Saini\\\\Documents\\\\Full Stack\\\\React\\\\World-Population\\\\client\\\\src\\\\ChartSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2'; // Import Line from react-chartjs-2\nimport 'chartjs-plugin-zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartSection = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const ctx = chartRef.current.chartInstance.ctx;\n      const countries = [...new Set(data.map(item => item.country.value))];\n      const datasets = countries.map((country, index) => {\n        const color = `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 1)`;\n        return {\n          label: country,\n          data: data.filter(item => item.country.value === country).map(item => ({\n            x: item.date,\n            y: item.value\n          })),\n          borderColor: color,\n          borderWidth: 1,\n          fill: false,\n          pointStyle: 'circle',\n          pointRadius: 2,\n          pointBorderColor: color,\n          pointBackgroundColor: color\n        };\n      });\n      const minYear = Math.min(...data.map(item => item.date));\n      const maxYear = Math.max(...data.map(item => item.date));\n      const minPopulation = Math.min(...data.map(item => item.value));\n      const maxPopulation = Math.max(...data.map(item => item.value));\n      const options = {\n        responsive: true,\n        animation: {\n          duration: 0\n        },\n        plugins: {\n          zoom: {\n            pan: {\n              enabled: true,\n              mode: 'xy'\n            },\n            zoom: {\n              enabled: true,\n              mode: 'xy',\n              sensitivity: 0.02\n            }\n          }\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            min: minYear,\n            max: maxYear\n          },\n          y: {\n            type: 'linear',\n            min: minPopulation - minPopulation / 5,\n            max: maxPopulation\n          }\n        }\n      };\n      const dataConfig = {\n        labels: data.map(item => item.date),\n        datasets: datasets\n      };\n      new Chart(ctx, {\n        type: 'line',\n        data: dataConfig,\n        options: options\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Chart Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartSection, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = ChartSection;\nexport default ChartSection;\nvar _c;\n$RefreshReg$(_c, \"ChartSection\");","map":{"version":3,"names":["React","useEffect","useRef","Line","jsxDEV","_jsxDEV","ChartSection","data","_s","chartRef","current","ctx","chartInstance","countries","Set","map","item","country","value","datasets","index","color","Math","random","label","filter","x","date","y","borderColor","borderWidth","fill","pointStyle","pointRadius","pointBorderColor","pointBackgroundColor","minYear","min","maxYear","max","minPopulation","maxPopulation","options","responsive","animation","duration","plugins","zoom","pan","enabled","mode","sensitivity","scales","type","dataConfig","labels","Chart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/Deepak Saini/Documents/Full Stack/React/World-Population/client/src/ChartSection.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Line } from 'react-chartjs-2'; // Import Line from react-chartjs-2\r\nimport 'chartjs-plugin-zoom';\r\n\r\nconst ChartSection = ({ data }) => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef && chartRef.current) {\r\n      const ctx = chartRef.current.chartInstance.ctx;\r\n\r\n      const countries = [...new Set(data.map((item) => item.country.value))];\r\n\r\n      const datasets = countries.map((country, index) => {\r\n        const color = `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 1)`;\r\n\r\n        return {\r\n          label: country,\r\n          data: data\r\n            .filter((item) => item.country.value === country)\r\n            .map((item) => ({\r\n              x: item.date,\r\n              y: item.value,\r\n            })),\r\n          borderColor: color,\r\n          borderWidth: 1,\r\n          fill: false,\r\n          pointStyle: 'circle',\r\n          pointRadius: 2,\r\n          pointBorderColor: color,\r\n          pointBackgroundColor: color,\r\n        };\r\n      });\r\n\r\n      const minYear = Math.min(...data.map((item) => item.date));\r\n      const maxYear = Math.max(...data.map((item) => item.date));\r\n\r\n      const minPopulation = Math.min(...data.map((item) => item.value));\r\n      const maxPopulation = Math.max(...data.map((item) => item.value));\r\n\r\n      const options = {\r\n        responsive: true,\r\n        animation: {\r\n          duration: 0,\r\n        },\r\n        plugins: {\r\n          zoom: {\r\n            pan: {\r\n              enabled: true,\r\n              mode: 'xy',\r\n            },\r\n            zoom: {\r\n              enabled: true,\r\n              mode: 'xy',\r\n              sensitivity: 0.02,\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          x: {\r\n            type: 'linear',\r\n            min: minYear,\r\n            max: maxYear,\r\n          },\r\n          y: {\r\n            type: 'linear',\r\n            min: minPopulation - minPopulation / 5,\r\n            max: maxPopulation,\r\n          },\r\n        },\r\n      };\r\n\r\n      const dataConfig = {\r\n        labels: data.map((item) => item.date),\r\n        datasets: datasets,\r\n      };\r\n\r\n      new Chart(ctx, {\r\n        type: 'line',\r\n        data: dataConfig,\r\n        options: options,\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center\">Chart Section</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Line ref={chartRef} /> {/* Use Line from react-chartjs-2 */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}