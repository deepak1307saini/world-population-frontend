{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak Saini\\\\Documents\\\\Full Stack\\\\React\\\\World-Population\\\\client\\\\src\\\\ChartSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Chart from 'chart.js/auto';\nimport 'chartjs-plugin-zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartSection = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n\n  // Function to update the chart size based on the container width\n  const updateChartSize = useCallback(() => {\n    if (chartRef && chartRef.current) {\n      const parentWidth = chartRef.current.parentElement.clientWidth;\n\n      // Set the canvas width to match the parent container's width\n      chartRef.current.width = parentWidth;\n\n      // Ensure the chartInstance is available and update its size\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.resize();\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy(); // Destroy the previous chart instance\n    }\n\n    if (chartRef && chartRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n\n      // ... rest of the code\n\n      const newChartInstance = new Chart(ctx, {\n        type: 'line',\n        // Use line chart type to connect data points with lines\n        data: {\n          labels: data.map(item => item.date),\n          datasets: datasets\n        },\n        options: {\n          responsive: true,\n          // Ensure chart responsiveness\n          maintainAspectRatio: false // Allow chart to adjust aspect ratio based on container size\n          // ... rest of the options\n        }\n      });\n\n      chartInstanceRef.current = newChartInstance;\n\n      // Update the chart size when the component mounts and on window resize\n      updateChartSize();\n      window.addEventListener('resize', updateChartSize);\n    }\n\n    // Clean up the event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', updateChartSize);\n    };\n  }, [data, updateChartSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Chart Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartSection, \"7jim5jifX7poFMUtnkJIejiZsf8=\");\n_c = ChartSection;\nexport default ChartSection;\nvar _c;\n$RefreshReg$(_c, \"ChartSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Chart","jsxDEV","_jsxDEV","ChartSection","data","_s","chartRef","chartInstanceRef","updateChartSize","current","parentWidth","parentElement","clientWidth","width","resize","destroy","ctx","getContext","newChartInstance","type","labels","map","item","date","datasets","options","responsive","maintainAspectRatio","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/Deepak Saini/Documents/Full Stack/React/World-Population/client/src/ChartSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport 'chartjs-plugin-zoom';\r\n\r\nconst ChartSection = ({ data }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n\r\n  // Function to update the chart size based on the container width\r\n  const updateChartSize = useCallback(() => {\r\n    if (chartRef && chartRef.current) {\r\n      const parentWidth = chartRef.current.parentElement.clientWidth;\r\n\r\n      // Set the canvas width to match the parent container's width\r\n      chartRef.current.width = parentWidth;\r\n\r\n      // Ensure the chartInstance is available and update its size\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.resize();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy(); // Destroy the previous chart instance\r\n    }\r\n\r\n    if (chartRef && chartRef.current) {\r\n      const ctx = chartRef.current.getContext('2d');\r\n\r\n      // ... rest of the code\r\n\r\n      const newChartInstance = new Chart(ctx, {\r\n        type: 'line', // Use line chart type to connect data points with lines\r\n        data: {\r\n          labels: data.map((item) => item.date),\r\n          datasets: datasets,\r\n        },\r\n        options: {\r\n          responsive: true, // Ensure chart responsiveness\r\n          maintainAspectRatio: false, // Allow chart to adjust aspect ratio based on container size\r\n          // ... rest of the options\r\n        },\r\n      });\r\n\r\n      chartInstanceRef.current = newChartInstance;\r\n\r\n      // Update the chart size when the component mounts and on window resize\r\n      updateChartSize();\r\n      window.addEventListener('resize', updateChartSize);\r\n    }\r\n\r\n    // Clean up the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', updateChartSize);\r\n    };\r\n  }, [data, updateChartSize]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center\">Chart Section</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          {/* Use Bootstrap classes for responsive container */}\r\n          <div className=\"chart-container\">\r\n            <canvas ref={chartRef}></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMS,gBAAgB,GAAGT,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAMU,eAAe,GAAGT,WAAW,CAAC,MAAM;IACxC,IAAIO,QAAQ,IAAIA,QAAQ,CAACG,OAAO,EAAE;MAChC,MAAMC,WAAW,GAAGJ,QAAQ,CAACG,OAAO,CAACE,aAAa,CAACC,WAAW;;MAE9D;MACAN,QAAQ,CAACG,OAAO,CAACI,KAAK,GAAGH,WAAW;;MAEpC;MACA,IAAIH,gBAAgB,CAACE,OAAO,EAAE;QAC5BF,gBAAgB,CAACE,OAAO,CAACK,MAAM,CAAC,CAAC;MACnC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,IAAIU,gBAAgB,CAACE,OAAO,EAAE;MAC5BF,gBAAgB,CAACE,OAAO,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;IACtC;;IAEA,IAAIT,QAAQ,IAAIA,QAAQ,CAACG,OAAO,EAAE;MAChC,MAAMO,GAAG,GAAGV,QAAQ,CAACG,OAAO,CAACQ,UAAU,CAAC,IAAI,CAAC;;MAE7C;;MAEA,MAAMC,gBAAgB,GAAG,IAAIlB,KAAK,CAACgB,GAAG,EAAE;QACtCG,IAAI,EAAE,MAAM;QAAE;QACdf,IAAI,EAAE;UACJgB,MAAM,EAAEhB,IAAI,CAACiB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;UACrCC,QAAQ,EAAEA;QACZ,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAAE;UAClBC,mBAAmB,EAAE,KAAK,CAAE;UAC5B;QACF;MACF,CAAC,CAAC;;MAEFpB,gBAAgB,CAACE,OAAO,GAAGS,gBAAgB;;MAE3C;MACAV,eAAe,CAAC,CAAC;MACjBoB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAErB,eAAe,CAAC;IACpD;;IAEA;IACA,OAAO,MAAM;MACXoB,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEtB,eAAe,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACJ,IAAI,EAAEI,eAAe,CAAC,CAAC;EAE3B,oBACEN,OAAA;IAAK6B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B9B,OAAA;MAAI6B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9ClC,OAAA;MAAK6B,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClB9B,OAAA;QAAK6B,SAAS,EAAC,WAAW;QAAAC,QAAA,eAExB9B,OAAA;UAAK6B,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9B9B,OAAA;YAAQmC,GAAG,EAAE/B;UAAS;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CApEIF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAsElB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}