{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak Saini\\\\Documents\\\\Full Stack\\\\React\\\\World-Population\\\\client\\\\src\\\\ChartSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ReferenceArea } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryPopulationChart = ({\n  data\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [left, setLeft] = useState(\"dataMin\");\n  const [right, setRight] = useState(\"dataMax\");\n  const [refAreaLeft, setRefAreaLeft] = useState(\"\");\n  const [refAreaRight, setRefAreaRight] = useState(\"\");\n  const [top, setTop] = useState(\"dataMax+1\");\n  const [bottom, setBottom] = useState(\"dataMin-1\");\n  useEffect(() => {\n    setChartData(data);\n  }, [data]);\n  const handleZoom = () => {\n    if (refAreaLeft === refAreaRight || refAreaRight === \"\") {\n      setRefAreaLeft(\"\");\n      setRefAreaRight(\"\");\n      return;\n    }\n    if (refAreaLeft > refAreaRight) {\n      [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n    }\n    const filteredData = data.filter(entry => entry.date >= refAreaLeft && entry.date <= refAreaRight && entry.value);\n    if (filteredData.length > 0) {\n      const [minValue, maxValue] = [Math.min(...filteredData.map(entry => entry.value)), Math.max(...filteredData.map(entry => entry.value))];\n      setRefAreaLeft(\"\");\n      setRefAreaRight(\"\");\n      setLeft(refAreaLeft);\n      setRight(refAreaRight);\n      setBottom(Math.floor(minValue));\n      setTop(Math.ceil(maxValue));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country-population-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Population by Country Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 800,\n      height: 400,\n      data: chartData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        domain: [bottom, top]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), data.map((entry, index) => /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        data: chartData.filter(item => item.country.id === entry.country.id && item.value !== null),\n        name: entry.country.value,\n        stroke: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n      }, `line-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), refAreaLeft && refAreaRight ? /*#__PURE__*/_jsxDEV(ReferenceArea, {\n        x1: refAreaLeft,\n        x2: refAreaRight,\n        strokeOpacity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoom,\n        children: \"Zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryPopulationChart, \"pOSpBYWwUoBotQEk5Dp2fKfjlQU=\");\n_c = CountryPopulationChart;\nexport default CountryPopulationChart;\nvar _c;\n$RefreshReg$(_c, \"CountryPopulationChart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","ReferenceArea","jsxDEV","_jsxDEV","CountryPopulationChart","data","_s","chartData","setChartData","left","setLeft","right","setRight","refAreaLeft","setRefAreaLeft","refAreaRight","setRefAreaRight","top","setTop","bottom","setBottom","handleZoom","filteredData","filter","entry","date","value","length","minValue","maxValue","Math","min","map","max","floor","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","strokeDasharray","dataKey","domain","index","type","item","country","id","name","stroke","random","toString","x1","x2","strokeOpacity","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Deepak Saini/Documents/Full Stack/React/World-Population/client/src/ChartSection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  ReferenceArea,\r\n} from \"recharts\";\r\n\r\nconst CountryPopulationChart = ({ data }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [left, setLeft] = useState(\"dataMin\");\r\n  const [right, setRight] = useState(\"dataMax\");\r\n  const [refAreaLeft, setRefAreaLeft] = useState(\"\");\r\n  const [refAreaRight, setRefAreaRight] = useState(\"\");\r\n  const [top, setTop] = useState(\"dataMax+1\");\r\n  const [bottom, setBottom] = useState(\"dataMin-1\");\r\n\r\n  useEffect(() => {\r\n    setChartData(data);\r\n  }, [data]);\r\n\r\n  const handleZoom = () => {\r\n    if (refAreaLeft === refAreaRight || refAreaRight === \"\") {\r\n      setRefAreaLeft(\"\");\r\n      setRefAreaRight(\"\");\r\n      return;\r\n    }\r\n\r\n    if (refAreaLeft > refAreaRight) {\r\n      [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\r\n    }\r\n\r\n    const filteredData = data.filter(\r\n      (entry) =>\r\n        entry.date >= refAreaLeft && entry.date <= refAreaRight && entry.value\r\n    );\r\n\r\n    if (filteredData.length > 0) {\r\n      const [minValue, maxValue] = [\r\n        Math.min(...filteredData.map((entry) => entry.value)),\r\n        Math.max(...filteredData.map((entry) => entry.value)),\r\n      ];\r\n\r\n      setRefAreaLeft(\"\");\r\n      setRefAreaRight(\"\");\r\n      setLeft(refAreaLeft);\r\n      setRight(refAreaRight);\r\n      setBottom(Math.floor(minValue));\r\n      setTop(Math.ceil(maxValue));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"country-population-chart\">\r\n      <h2>Population by Country Over Time</h2>\r\n      <LineChart\r\n        width={800}\r\n        height={400}\r\n        data={chartData}\r\n        margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis domain={[bottom, top]} />\r\n        <Tooltip />\r\n        <Legend />\r\n\r\n        {data.map((entry, index) => (\r\n          <Line\r\n            key={`line-${index}`}\r\n            type=\"monotone\"\r\n            dataKey=\"value\"\r\n            data={chartData.filter(\r\n              (item) =>\r\n                item.country.id === entry.country.id && item.value !== null\r\n            )}\r\n            name={entry.country.value}\r\n            stroke={`#${Math.floor(Math.random() * 16777215).toString(16)}`}\r\n          />\r\n        ))}\r\n\r\n        {refAreaLeft && refAreaRight ? (\r\n          <ReferenceArea\r\n            x1={refAreaLeft}\r\n            x2={refAreaRight}\r\n            strokeOpacity={0.3}\r\n          />\r\n        ) : null}\r\n      </LineChart>\r\n\r\n      <div className=\"zoom-buttons\">\r\n        <button onClick={handleZoom}>Zoom</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPopulationChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}